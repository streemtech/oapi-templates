//Generated with typedef.tmpl

{{range .Types}}
{{ if .Schema.Description }}{{ toGoComment .Schema.Description .TypeName  }}{{ else }}// {{.TypeName}} defines model for {{.JsonName}}.{{ end }}
type {{.TypeName}} {{if .IsAlias }}={{end}} {{if gt (len .Schema.UnionElements) 0}} struct {
	union jsonv1.RawMessage
}{{else}}{{.Schema.TypeDecl}}{{end}}

{{$t := .TypeName}}
{{range .Schema.Properties -}}
func (datatype {{$t}}) Get{{camelCase .JsonFieldName}}() {{if gt (len .Schema.RefType) 0 }}{{.Schema.RefType}}{{else}}{{.Schema.GoType}}{{end}} {
{{- if .Required}}
    return datatype.{{camelCase .JsonFieldName}}
{{- else}}
    if datatype.{{camelCase .JsonFieldName}} == nil {
        var empty {{.Schema.GoType}}
        return empty 
    }
	return *datatype.{{camelCase .JsonFieldName}}
{{end -}}
}
{{end}}
{{/* toJson .Schema */}}
{{end}}

{{template "gorm" .}}